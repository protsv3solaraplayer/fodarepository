--// UI \\--

local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/ItsWalterWhiteYO/walterthemes/main/themes"))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
  Title = "|ðŸŒŸPatrick.PubðŸŒŸ| |Free|", 
  Center = true,
  AutoShow = true,
  TabPadding = 8,
  MenuFadeTime = 0.2
})

local Tabs = {
    ['Combat'] = Window:AddTab('Combat'),
    ['Visuals'] = Window:AddTab('Visuals'),
    ['Misc'] = Window:AddTab('Misc'),
    ['Credits'] = Window:AddTab('Credits'),
    ['UI Settings'] = Window:AddTab('Configs'),
}





--// COMBAT \\--


local Socolo = Instance.new("Sky", game:GetService("Lighting"))
Socolo.Name = "SCDSCSD"

local CustomSkyTabBox = Tabs.Misc:AddLeftTabbox('Custom Sky')
local CustomSkyTab = CustomSkyTabBox:AddTab('Custom Sky')

local Socolo = Instance.new("Sky",game:GetService("Lighting"))

getgenv().Enabled1 = nil

CustomSkyTab:AddToggle('SkyBox', {Text = "Enabled",Default = false,Tooltip = "Enables Sky Box",}):OnChanged(function(SKYB)
    Enabled1 = SKYB
end)

Socolo.Name = "SkyBoxDrop"CustomSkyTab:AddDropdown('SkyDropD', {Values = { 'Default', 'Sponge Bob', 'Vaporwave', 'Clouds', 'Twilight', 'Chill', 'Minecraft', 'Among Us', 'Redshift', 'Aesthetic Night', 'Neptune', 'Galaxy'},Default = 1,Multi = false,Text = 'Custom Skybox',Tooltip = 'Sky Changer',
})

Options.SkyDropD:OnChanged(function(HOMO)
if Enabled1 then
if HOMO == "Default" then
Socolo.SkyboxBk = "rbxasset://textures/sky/sky512_bk.tex"
Socolo.SkyboxDn = "rbxasset://textures/sky/sky512_dn.tex"
Socolo.SkyboxFt = "rbxasset://textures/sky/sky512_ft.tex"
Socolo.SkyboxLf = "rbxasset://textures/sky/sky512_lf.tex"
Socolo.SkyboxRt = "rbxasset://textures/sky/sky512_rt.tex"
Socolo.SkyboxUp = "rbxasset://textures/sky/sky512_up.tex"
elseif HOMO == "Sponge Bob" then
Socolo.SkyboxBk = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxDn = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxFt = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxLf = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxRt = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxUp = "http://www.roblox.com/asset/?id=7633178166"
elseif HOMO == "Vaporwave" then
Socolo.SkyboxBk = "rbxassetid://1417494030"
Socolo.SkyboxDn = "rbxassetid://1417494146"
Socolo.SkyboxFt = "rbxassetid://1417494253"
Socolo.SkyboxLf = "rbxassetid://1417494402"
Socolo.SkyboxRt = "rbxassetid://1417494499"
Socolo.SkyboxUp = "rbxassetid://1417494643"
elseif HOMO == "Clouds" then
Socolo.SkyboxBk = "rbxassetid://570557514"
Socolo.SkyboxDn = "rbxassetid://570557775"
Socolo.SkyboxFt = "rbxassetid://570557559"
Socolo.SkyboxLf = "rbxassetid://570557620"
Socolo.SkyboxRt = "rbxassetid://570557672"
Socolo.SkyboxUp = "rbxassetid://570557727"
elseif HOMO == "Twilight" then
Socolo.SkyboxBk = "rbxassetid://264908339"
Socolo.SkyboxDn = "rbxassetid://264907909"
Socolo.SkyboxFt = "rbxassetid://264909420"
Socolo.SkyboxLf = "rbxassetid://264909758"
Socolo.SkyboxRt = "rbxassetid://264908886"
Socolo.SkyboxUp = "rbxassetid://264907379"
elseif HOMO == "Chill" then
Socolo.SkyboxBk = "rbxassetid://5084575798"
Socolo.SkyboxDn = "rbxassetid://5084575916"
Socolo.SkyboxFt = "rbxassetid://5103949679"
Socolo.SkyboxLf = "rbxassetid://5103948542"
Socolo.SkyboxRt = "rbxassetid://5103948784"
Socolo.SkyboxUp = "rbxassetid://5084576400"
elseif HOMO == "Minecraft" then
Socolo.SkyboxBk = "rbxassetid://1876545003"
Socolo.SkyboxDn = "rbxassetid://1876544331"
Socolo.SkyboxFt = "rbxassetid://1876542941"
Socolo.SkyboxLf = "rbxassetid://1876543392"
Socolo.SkyboxRt = "rbxassetid://1876543764"
Socolo.SkyboxUp = "rbxassetid://1876544642"
elseif HOMO == "Among Us" then
Socolo.SkyboxBk = "rbxassetid://5752463190"
Socolo.SkyboxDn = "rbxassetid://5872485020"
Socolo.SkyboxFt = "rbxassetid://5752463190"
Socolo.SkyboxLf = "rbxassetid://5752463190"
Socolo.SkyboxRt = "rbxassetid://5752463190"
Socolo.SkyboxUp = "rbxassetid://5752463190"
elseif HOMO == "Redshift" then
Socolo.SkyboxBk = "rbxassetid://401664839"
Socolo.SkyboxDn = "rbxassetid://401664862"
Socolo.SkyboxFt = "rbxassetid://401664960"
Socolo.SkyboxLf = "rbxassetid://401664881"
Socolo.SkyboxRt = "rbxassetid://401664901"
Socolo.SkyboxUp = "rbxassetid://401664936"
elseif HOMO == "Aesthetic Night" then
Socolo.SkyboxBk = "rbxassetid://1045964490"
Socolo.SkyboxDn = "rbxassetid://1045964368"
Socolo.SkyboxFt = "rbxassetid://1045964655"
Socolo.SkyboxLf = "rbxassetid://1045964655"
Socolo.SkyboxRt = "rbxassetid://1045964655"
Socolo.SkyboxUp = "rbxassetid://1045962969"
elseif HOMO == "Neptune" then
Socolo.SkyboxBk = "rbxassetid://218955819"
Socolo.SkyboxDn = "rbxassetid://218953419"
Socolo.SkyboxFt = "rbxassetid://218954524"
Socolo.SkyboxLf = "rbxassetid://218958493"
Socolo.SkyboxRt = "rbxassetid://218957134"
Socolo.SkyboxUp = "rbxassetid://218950090"
Socolo.StarCount = 5000
elseif HOMO == "Galaxy" then
Socolo.SkyboxBk = "http://www.roblox.com/asset/?id=159454299"
Socolo.SkyboxDn = "http://www.roblox.com/asset/?id=159454296"
Socolo.SkyboxFt = "http://www.roblox.com/asset/?id=159454293"
Socolo.SkyboxLf = "http://www.roblox.com/asset/?id=159454286"
Socolo.SkyboxRt = "http://www.roblox.com/asset/?id=159454300"
Socolo.SkyboxUp = "http://www.roblox.com/asset/?id=159454288"
Socolo.StarCount = 5000
end
end
end)

local ArmVisTabBox = Tabs.Visuals:AddLeftTabbox('arm visuals')
local ArmVisTab = ArmVisTabBox:AddTab('local chams')



local function setArmProperties(property, value)
local armParts = {"LeftUpperArm", "LeftLowerArm", "LeftHand","RightUpperArm", "RightLowerArm", "RightHand"}
for _, partName in ipairs(armParts) do
game:GetService("Workspace").Ignore.FPSArms[partName][property] = value
end
end

ArmVisTab:AddToggle('ArmChams', { Text = 'enabled', Default = false }):AddColorPicker('ArmChamsColor', { Default = Color3.fromRGB(142, 255, 0), Title = 'Color' }):OnChanged(function(Value)
if Value == true then
elseif Value == false then
setArmProperties("Color", Color3.fromRGB(142, 255, 0))
setArmProperties("Material", "SmoothPlastic")
setArmProperties("TextureID", "")
end
end)
Options.ArmChamsColor:OnChanged(function(Value)
setArmProperties("Color", Value)
end)

ArmVisTab:AddDropdown('ArmChamsMaterial', {Values = { "ForceField"  },Default = 1,Multi = false,Text = 'arm material:'}):OnChanged(function(Value)
setArmProperties("Material", Value)
end)


local HitTabBox = Tabs.Misc:AddRightTabbox('Fov changer')
local TABHERE = HitTabBox:AddTab('Fov slider')





local varsglobal = {
  visuals = {
      FovChanger = false, 
      FovAdd = 80,
      OldFov = workspace.CurrentCamera.FieldOfView,
      ZoomAmt = 0,
      FovZoom = false,
  },
}

local function updateFOV()
  if varsglobal.visuals.FovChanger then
      workspace.CurrentCamera.FieldOfView = varsglobal.visuals.OldFov + varsglobal.visuals.FovAdd
  else
      workspace.CurrentCamera.FieldOfView = varsglobal.visuals.OldFov
  end
end
game:GetService("RunService").RenderStepped:Connect(updateFOV)

TABHERE:AddToggle('FovToggle',{Text='Enabled',Default=false}):AddKeyPicker('FOVKey', {Default='Non',SyncToggleState=true,Mode='Toggle',Text='Field of View',NoUI=false}):OnChanged(function(Value)
varsglobal.visuals.FovChanger = Value
end)

TABHERE:AddSlider('FovSlider', {Text='FOV',Default=80,Min=20,Max=120,Rounding=0,Compact=false,Suffix=""}):OnChanged(function(Value)
varsglobal.visuals.FovAdd = Value
end)


local TabBox = Tabs.Combat:AddRightTabbox()
local ExploitsTab = TabBox:AddTab('EXPLOITS')


local longneck = {
    LongNeckEnabled = false,
    UpperLimitDefault = 3,
    LowerLimitDefault = 1.75,
    CurrentSliderValue = 1.75,
    }
    
    ExploitsTab:AddToggle('LongNeck', {Text = 'long neck', Default = false, Tooltip}):AddKeyPicker('LongNeckKey', {Default = 'Non', SyncToggleState = true, Mode = 'Toggle', Text = 'Long Neck', NoUI = false}):OnChanged(function(value)
    longneck.LongNeckEnabled = value
    if not longneck.LongNeckEnabled then
    game:GetService("Workspace").Ignore.LocalCharacter.Bottom.PrismaticConstraint.UpperLimit = longneck.UpperLimitDefault
    game:GetService("Workspace").Ignore.LocalCharacter.Bottom.PrismaticConstraint.LowerLimit = longneck.LowerLimitDefault
    else
    game:GetService("Workspace").Ignore.LocalCharacter.Bottom.PrismaticConstraint.UpperLimit = longneck.CurrentSliderValue
    game:GetService("Workspace").Ignore.LocalCharacter.Bottom.PrismaticConstraint.LowerLimit = longneck.CurrentSliderValue
    end
    end)
    
    ExploitsTab:AddSlider('HeightChangerSlider', {Text = 'height:', Suffix = "m", Default = 4, Min = 0, Max = 8; Rounding = 1, Compact = false}):OnChanged(function(Value)
    longneck.CurrentSliderValue = Value
    if longneck.LongNeckEnabled then
    game:GetService("Workspace").Ignore.LocalCharacter.Bottom.PrismaticConstraint.LowerLimit = Value
    game:GetService("Workspace").Ignore.LocalCharacter.Bottom.PrismaticConstraint.UpperLimit = Value
    end
    end)

    local HeadHitboxTabBox = Tabs.Combat:AddLeftTabbox('head hitbox')

    
    local antihitbox
    antihitbox = hookmetamethod(game, "__index", newcclosure(function(...)
    local self, k = ...
    if not checkcaller() and k == "Size" and self.Name == "Head" then
      return Vector3.new(1.672248125076294, 0.835624098777771, 0.835624098777771)
    end
    return antihitbox(...)
    end))
    

--Tables
local Functions = {}
local Esp = {Settings={
    Boxes=true,BoxesOutline=true,BoxesColor=Color3.fromRGB(142, 255, 0),BoxesOutlineColor=Color3.fromRGB(0,0,0),
    Sleeping=false,SleepingColor=Color3.fromRGB(142, 255, 0),
    Distances=false,DistanceColor=Color3.fromRGB(142, 255, 0),
    Armour=false,ArmourColor=Color3.fromRGB(142, 255, 0),
    Tool=false,ToolColor=Color3.fromRGB(142, 255, 0),
    ViewAngle=false,ViewAngleColor=Color3.fromRGB(142, 255, 0),ViewAngleThickness=1,ViewAngleTransparrency=1,
    TextFont=2,TextOutline=true,TextSize=15,RenderDistance=1500,TeamCheck=false,TargetSleepers=false,MinTextSize=8
},Drawings={},Connections={},Players={}}
local Fonts = {["UI"]=0,["System"]=1,["Plex"]=2,["Monospace"]=3}
local cache = {}

--Locals
local Camera = game:GetService("Workspace").CurrentCamera
local CharcaterMiddle = game:GetService("Workspace").Ignore.LocalCharacter.Middle

--Functions
function Functions:IsSleeping(Model)
    if Model and Model:FindFirstChild("AnimationController") and Model.AnimationController:FindFirstChild("Animator") then
		for i,v in pairs(Model.AnimationController.Animator:GetPlayingAnimationTracks()) do
            if v.Animation.AnimationId == "rbxassetid://13280887764" then
                return true
            else
                return false
            end
        end
    end
end
function Functions:Draw(Type,Propities)
    if not Type and not Propities then return end
    local drawing = Drawing.new(Type)
    for i,v in pairs(Propities) do
        drawing[i] = v
    end
    table.insert(Esp.Drawings,drawing)
    return drawing
end
function Esp:CreateEsp(PlayerTable)
    if not PlayerTable then return end
    local drawings = {}
    drawings.BoxOutline = Functions:Draw("Square",{Thickness=2,Filled=false,Transparency=1,Color=Esp.Settings.BoxesOutlineColor,Visible=false,ZIndex = -1,Visible=false});
    drawings.Box = Functions:Draw("Square",{Thickness=1,Filled=false,Transparency=1,Color=Esp.Settings.BoxesColor,Visible=false,ZIndex = 2,Visible=false});
    drawings.Sleeping = Functions:Draw("Text",{Text = "Nil",Font=Esp.Settings.TextFont,Size=Esp.Settings.TextSize,Center=true,Outline=Esp.Settings.TextOutline,Color = Esp.Settings.SleepingColor,ZIndex = 2,Visible=false})
    drawings.Distance = Functions:Draw("Text",{Text = "Nil",Font=Esp.Settings.TextFont,Size=Esp.Settings.TextSize,Center=true,Outline=Esp.Settings.TextOutline,Color = Esp.Settings.SleepingColor,ZIndex = 2,Visible=false})
    drawings.Armour = Functions:Draw("Text",{Text = "Naked",Font=Esp.Settings.TextFont,Size=Esp.Settings.TextSize,Center=false,Outline=Esp.Settings.TextOutline,Color = Esp.Settings.ArmourColor,ZIndex = 2,Visible=false})
    drawings.ViewAngle = Functions:Draw("Line",{Thickness=Esp.Settings.ViewAngleThickness,Transparency=Esp.Settings.ViewAngleTransparrency,Color=Esp.Settings.ViewAngleColor,ZIndex=2,Visible=false})
    drawings.PlayerTable = PlayerTable
    Esp.Players[PlayerTable.model] = drawings
end
function Esp:RemoveEsp(PlayerTable)
    if not PlayerTable and PlayerTable.model ~= nil then return end
    esp = Esp.Players[PlayerTable.model];
    if not esp then return end
    for i, v in pairs(esp) do
        if not type(v) == "table" then
            v:Remove();
        end
    end
    Esp.Players[PlayerTable.model] = nil;
end

function Esp:UpdateEsp()
    for i,v in pairs(Esp.Players) do
        local Character = i
        local Position,OnScreen = Camera:WorldToViewportPoint(Character:GetPivot().Position);
        local scale = 1 / (Position.Z * math.tan(math.rad(Camera.FieldOfView * 0.5)) * 2) * 100;
        local w,h = math.floor(40 * scale), math.floor(55 * scale);
        local x,y = math.floor(Position.X), math.floor(Position.Y);
        local Distance = (CharcaterMiddle:GetPivot().Position-Character:GetPivot().Position).Magnitude
        local BoxPosX,BoxPosY = math.floor(x - w * 0.5),math.floor(y - h * 0.5)
        local offsetCFrame = CFrame.new(0, 0, -4)
        local sleeping = Functions:IsSleeping(Character)
        if Character and Character:FindFirstChild("HumanoidRootPart") and Character:FindFirstChild("Head") then
            local TeamTag = Character.Head.Teamtag.Enabled
            if OnScreen == true and Esp.Settings.Boxes == true and Distance <= Esp.Settings.RenderDistance then
                if Esp.Settings.TeamCheck == true and TeamTag == false then 
                    v.BoxOutline.Visible = Esp.Settings.BoxesOutline;v.Box.Visible = true
                elseif Esp.Settings.TeamCheck == true and TeamTag == true then
                    v.BoxOutline.Visible = false;v.Box.Visible = false
                else
                    v.BoxOutline.Visible = Esp.Settings.BoxesOutline;v.Box.Visible = true
                end
                if Esp.Settings.TargetSleepers == true and sleeping == true then
                    v.BoxOutline.Visible = false;v.Box.Visible = false
                end
                v.BoxOutline.Position = Vector2.new(BoxPosX,BoxPosY);v.BoxOutline.Size = Vector2.new(w,h)
                v.Box.Position = Vector2.new(BoxPosX,BoxPosY);v.Box.Size = Vector2.new(w,h)
                v.Box.Color = Esp.Settings.BoxesColor;v.BoxOutline.Color = Esp.Settings.BoxesOutlineColor
            else
                v.BoxOutline.Visible = false;v.Box.Visible = false
            end
            if OnScreen == true and Esp.Settings.Sleeping == true and Distance <= Esp.Settings.RenderDistance then
                if sleeping == true then v.Sleeping.Text = "Sleeping" else v.Sleeping.Text = "Awake" end
                if Esp.Settings.TeamCheck == true and TeamTag == false then
                    v.Sleeping.Visible = true
                elseif Esp.Settings.TeamCheck == true and TeamTag == true then
                    v.Sleeping.Visible = false
                end
                if Esp.Settings.TargetSleepers == true and sleeping == true then v.Sleeping.Visible = false end

                v.Sleeping.Outline=Esp.Settings.TextOutline;v.Sleeping.Color=Esp.Settings.SleepingColor;v.Sleeping.Size=math.max(math.min(math.abs(Esp.Settings.TextSize*scale),Esp.Settings.TextSize),Esp.Settings.MinTextSize);v.Sleeping.Color = Esp.Settings.SleepingColor;v.Sleeping.Font=Esp.Settings.TextFont;v.Sleeping.Position = Vector2.new(x,math.floor(y-h*0.5-v.Sleeping.TextBounds.Y))
            else
                v.Sleeping.Visible=false
            end
            if OnScreen == true and Esp.Settings.Distances == true and Distance <= Esp.Settings.RenderDistance then
                if Esp.Settings.TeamCheck == true and TeamTag == false then
                    v.Distance.Visible = true
                elseif Esp.Settings.TeamCheck == true and TeamTag == true then
                    v.Distance.Visible = false
                end
                if Esp.Settings.TargetSleepers == true and sleeping == true then v.Distance.Visible = false end

                if Esp.Settings.Sleeping == false then
                    v.Distance.Text = math.floor(Distance).."s"
                else
                    v.Distance.Text = math.floor(Distance).."s"
                end
                v.Distance.Outline=Esp.Settings.TextOutline;v.Distance.Color=Esp.Settings.SleepingColor;v.Distance.Size=math.max(math.min(math.abs(Esp.Settings.TextSize*scale),Esp.Settings.TextSize),Esp.Settings.MinTextSize);v.Distance.Color = Esp.Settings.DistanceColor;v.Distance.Font=Esp.Settings.TextFont;v.Distance.Position = Vector2.new(x,math.floor(y+h*.5))
            else
                v.Distance.Visible = false
            end
            if OnScreen == true and Esp.Settings.Armour == true and Distance <= Esp.Settings.RenderDistance then
                if Character.Armor:FindFirstChildOfClass("Folder") then v.Armour.Text = "Armoured" else v.Armour.Text = "Naked" end
                if Esp.Settings.TeamCheck == true and TeamTag == false then v.Armour.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.Armour.Visible = false else v.Armour.Visible = true end
                if Esp.Settings.TargetSleepers == true and sleeping == true then v.Armour.Visible = false end
                v.Armour.Outline=Esp.Settings.TextOutline;v.Armour.Size = math.max(math.min(math.abs(Esp.Settings.TextSize*scale),Esp.Settings.TextSize),Esp.Settings.MinTextSize);
                v.Armour.Position=Vector2.new(math.floor((BoxPosX+w)+v.Armour.TextBounds.X/10),BoxPosY+v.Armour.TextBounds.Y*1.55*0.5-((v.Armour.TextBounds.Y*2)*0.5));
                v.Armour.Color = Esp.Settings.ArmourColor;v.Armour.Font=Esp.Settings.TextFont
            else
                v.Armour.Visible = false
            end
            if OnScreen == true and Esp.Settings.ViewAngle == true and Distance <= Esp.Settings.RenderDistance then
                if Esp.Settings.TeamCheck == true and TeamTag == false then v.ViewAngle.Visible = true elseif Esp.Settings.TeamCheck == true and TeamTag == true then v.ViewAngle.Visible = false else v.ViewAngle.Visible = true end
                if Esp.Settings.TargetSleepers == true and sleeping == true then v.ViewAngle.Visible = false end
                v.ViewAngle.Color = Esp.Settings.ViewAngleColor;v.ViewAngle.Thickness=Esp.Settings.ViewAngleThickness;v.Transparency=Esp.Settings.ViewAngleTransparrency;
                local headpos = Camera:WorldToViewportPoint(Character.Head.Position)
                local offsetCFrame = CFrame.new(0, 0, -4)
                v.ViewAngle.From = Vector2.new(headpos.X, headpos.Y)
                local value = math.clamp(1/Distance*100, 0.1, 1)
                local dir = Character.Head.CFrame:ToWorldSpace(offsetCFrame)
                offsetCFrame = offsetCFrame * CFrame.new(0, 0, 0.4)
                local dirpos = Camera:WorldToViewportPoint(Vector3.new(dir.X, dir.Y, dir.Z))
                if OnScreen == true then
                    v.ViewAngle.To = Vector2.new(dirpos.X, dirpos.Y)
                    offsetCFrame = CFrame.new(0, 0, -4)
                end
            else
                v.ViewAngle.Visible = false
            end
        else
            v.Box.Visible=false;v.BoxOutline.Visible=false;v.Armour.Visible=false;v.Distance.Visible=false;v.ViewAngle.Visible=false;v.Sleeping.Visible=false;
        end
    end
end

--Connections
local PlayerUpdater = game:GetService("RunService").RenderStepped
local PlayerConnection = PlayerUpdater:Connect(function()
    Esp:UpdateEsp()
end)

--Init Functions
for i,v in pairs(workspace:GetChildren()) do
	if v:FindFirstChild("HumanoidRootPart") then
        table.insert(cache,v)
        Esp:CreateEsp({model=v})
	end
end

game:GetService("Workspace").ChildAdded:Connect(function(child)
    if child:FindFirstChild("HumanoidRootPart") and not table.find(cache,child) then
        table.insert(cache,child)
        Esp:CreateEsp({model=child})
    end
end)

local PlayerVisualTabbox = Tabs.Visuals:AddLeftTabbox()
local PlayerVisualTab = PlayerVisualTabbox:AddTab('Players')
local PlayerSettingsVisualTab = PlayerVisualTabbox:AddTab('Settings')

PlayerVisualTab:AddToggle('Boxes',{Text='Boxes',Default=false}):AddColorPicker('BoxesColor',{Default=Color3.fromRGB(142, 255, 0),Title='Color'}):AddColorPicker('BoxesOutlineColor',{Default=Color3.fromRGB(0,0,0),Title='Color'})
PlayerVisualTab:AddToggle('Distances',{Text='Distance',Default=false}):AddColorPicker('DistancesColor',{Default=Color3.fromRGB(142, 255, 0),Title='Color'})
PlayerVisualTab:AddToggle('Sleeping',{Text='Sleeping',Default=false}):AddColorPicker('SleepingColor',{Default=Color3.fromRGB(142, 255, 0),Title='Color'})
PlayerVisualTab:AddToggle('Armour',{Text='Armour',Default=false}):AddColorPicker('ArmourColor',{Default=Color3.fromRGB(142, 255, 0),Title='Color'})
PlayerVisualTab:AddToggle('ViewAngle',{Text='View Angle',Default=false}):AddColorPicker('ViewAngleColor',{Default=Color3.fromRGB(142, 255, 0),Title='Color'})

--Esp Switches
Toggles.ViewAngle:OnChanged(function(Value)
    Esp.Settings.ViewAngle = Value
end)
Options.ViewAngleColor:OnChanged(function(Value)
    Esp.Settings.ViewAngleColor = Value
end)
Toggles.Armour:OnChanged(function(Value)
    Esp.Settings.Armour = Value
end)
Options.ArmourColor:OnChanged(function(Value)
    Esp.Settings.ArmourColor = Value
end)
Toggles.Armour:OnChanged(function(Value)
    Esp.Settings.Armour = Value
end)
Toggles.Distances:OnChanged(function(Value)
    Esp.Settings.Distances = Value
end)
Options.DistancesColor:OnChanged(function(Value)
    Esp.Settings.DistanceColor = Value
end)
Options.BoxesColor:OnChanged(function(Value)
    Esp.Settings.BoxesColor = Value
end)
Options.BoxesOutlineColor:OnChanged(function(Value)
    Esp.Settings.BoxesOutlineColor = Value
end)
Toggles.Boxes:OnChanged(function(Value)
    Esp.Settings.Boxes = Value
end)
Options.SleepingColor:OnChanged(function(Value)
    Esp.Settings.SleepingColor = Value
end)
Toggles.Sleeping:OnChanged(function(Value)
    Esp.Settings.Sleeping = Value
end)
PlayerSettingsVisualTab:AddSlider('RenderDistance', {Text='Render Distance',Default=500,Min=1,Max=1500,Rounding=0,Compact=false,Suffix="s"}):OnChanged(function(Value)
    Esp.Settings.RenderDistance = Value
end)
PlayerSettingsVisualTab:AddToggle('TargetSleepers',{Text='Dont Show Sleepers',Default=true}):OnChanged(function(Value)
    Esp.Settings.TargetSleepers = Value
end)
PlayerSettingsVisualTab:AddToggle('BoxesOutlines',{Text='Box Outlines',Default=true}):OnChanged(function(Value)
    Esp.Settings.BoxesOutline = Value
end)
PlayerSettingsVisualTab:AddToggle('TeamCheck',{Text='Team Check',Default=true}):OnChanged(function(Value)
    Esp.Settings.TeamCheck = Value
end)
PlayerSettingsVisualTab:AddToggle('TextOutline',{Text='Text Outlines',Default=true}):OnChanged(function(Value)
    Esp.Settings.TextOutline = Value
end)

local WorldEspTabBox = Tabs.Misc:AddRightTabbox('world esp')
local WorldEspTab = WorldEspTabBox:AddTab('world esp')

--* Player Settings *--

_G.SettingsOre = {
iron = {
  enabled = true,
  colour = Color3.fromRGB(199, 172, 120),
},
nitrate = {
  enabled = true,
  colour = Color3.fromRGB(248, 248, 248),
},
stone = {
  enabled = true,
  colour = Color3.fromRGB(205, 205, 205),
},
oreDistance = 1000,
}
local settings1 = _G.SettingsOre
if settings1 == nil then
return
end

WorldEspTab:AddToggle('iron_Toggle',{Text='enabled',Default=false})

WorldEspTab:AddSlider('OreRenderDistance', {Text='distance:',Default=0,Min=1,Max=1500,Rounding=0,Compact=false,Suffix=" studs"}):OnChanged(function(Value)
settings1.oreDistance = Value
end)

WorldEspTab:AddToggle('iron_Toggle',{Text='iron ore',Default=false}):AddColorPicker('IronColor', { Default = Color3.fromRGB(199, 172, 120), Title = 'Color', }):OnChanged(function(Value)
settings1.iron.enabled = Value
end)
Options.IronColor:OnChanged(function(Value)
settings1.iron.colour = Value
if settings1.iron.enabled then
settings1.iron.enabled = false
task.wait(0.01)
settings1.iron.enabled = true
end
end)

WorldEspTab:AddToggle('nitrate_Toggle',{Text='nitrate ore',Default=false}):AddColorPicker('NitrateColor', { Default = Color3.fromRGB(248, 248, 248), Title = 'Color', }):OnChanged(function(Value)
settings1.nitrate.enabled = Value
end)
Options.NitrateColor:OnChanged(function(Value)
settings1.nitrate.colour = Value
if settings1.nitrate.enabled then
settings1.nitrate.enabled = false
task.wait(0.01)
settings1.nitrate.enabled = true
end
end)

WorldEspTab:AddToggle('stone_Toggle',{Text='stone ore',Default=false}):AddColorPicker('StoneColor', { Default = Color3.fromRGB(205, 205, 205), Title = 'Color', }):OnChanged(function(Value)
settings1.stone.enabled = Value
end)
Options.StoneColor:OnChanged(function(Value)
settings1.stone.colour = Value
if settings1.stone.enabled then
settings1.stone.enabled = false
task.wait(0.01)
settings1.stone.enabled = true
end
end)

local Text1Font = 2
local textoutlines = true
local testsize = 11
local function get_text(text, position)
local distance = math.floor((position - workspace.Ignore.LocalCharacter.Middle.Position).Magnitude)
local final_text = tostring(text) .. "\n[" .. tostring(distance) .. "] studs"
return tostring(final_text)
end
local function worldtoviewport(position)
local a, b = workspace.CurrentCamera:WorldToViewportPoint(position)
return Vector2.new(a.X, a.Y), b
end
local function add_esp(part, text, colour, toggle)
local drawing_text = Drawing.new("Text")
drawing_text.Outline = textoutlines
drawing_text.Center = true
drawing_text.Visible = false
drawing_text.Font = Text1Font
drawing_text.Size = testsize
drawing_text.Color = colour
local rendersteploop = game:GetService("RunService").RenderStepped:connect(function()pcall(function()
if not part:IsDescendantOf(workspace) or not settings1 then
  table.remove(oresDebris,part)
  drawing_text:Remove()
  rendersteploop:Disconnect()
end
local part_pos = part.Position
local screen_pos, on_screen = worldtoviewport(part_pos)
if not on_screen then
  drawing_text.Visible = false
  drawing_text.Size = testsize
  drawing_text.Outline = textoutlines
  drawing_text.Font = Text1Font
  rendersteploop:Disconnect()
end
local oreDis = (game:GetService("Workspace").Ignore.LocalCharacter:WaitForChild("Top"):GetPivot().Position-part_pos).Magnitude
if oreDis >= settings1.oreDistance then
  drawing_text.Visible = false
  drawing_text.Size = testsize
  drawing_text.Outline = textoutlines
  drawing_text.Font = Text1Font
  rendersteploop:Disconnect()
end
if text == 'Iron' and not settings1.iron.enabled then
  drawing_text.Visible = false
  drawing_text.Color = settings1.iron.colour
  rendersteploop:Disconnect()
else if text == 'Nitrate' and not settings1.nitrate.enabled then
  drawing_text.Visible = false
  drawing_text.Color = settings1.nitrate.colour
  rendersteploop:Disconnect()
else if text == 'Stone' and not settings1.stone.enabled then
  drawing_text.Visible = false
  drawing_text.Color = settings1.stone.colour
  rendersteploop:Disconnect()
end
end
end
drawing_text.Visible = true
drawing_text.Text = get_text(text, part_pos)
drawing_text.Position = screen_pos
drawing_text.Size = testsize
drawing_text.Outline = textoutlines
drawing_text.Font = Text1Font
rendersteploop:Disconnect()
end)
end)
end
local function filter_models(v)
if (not v:IsA("Model")) then
return
end
local is_part = v:FindFirstChild("Part")
local children = v:GetChildren()
local child_amount = #children
if is_part then
if child_amount == 1 then
add_esp(is_part, "Stone", settings1.stone.colour, settings1.stone.enabled)
elseif child_amount == 2 then
for _, v in pairs(children) do
  local brickcolor = v.BrickColor
  local is_ore = v.ClassName == "MeshPart" and v.Name == "Part"
  if is_ore then
    if brickcolor == BrickColor.new("Institutional white") then
      add_esp(v, "Nitrate", settings1.nitrate.colour, settings1.nitrate.enabled)
    elseif brickcolor == BrickColor.new("Burlap") then
      add_esp(v, "Iron", settings1.iron.colour, settings1.iron.enabled)
    end
  end
end
end
end
end
for index, model in pairs(workspace:GetChildren()) do
filter_models(model)
end
workspace.ChildAdded:Connect(function(model)
filter_models(model)
end)

WorldEspTab:AddDivider("")

WorldEspTab:AddToggle('TextOutline2',{Text='text outlines',Default=true}):OnChanged(function(Value)
textoutlines = Value
end)

WorldEspTab:AddSlider('TextSizeSlider2', {Text = 'text size:', Default = 12, Min = 1, Max = 25, Rounding = 0, Suffix = "px", Compact = false}):OnChanged(function(TextSizeValue2)
testsize = TextSizeValue2
end)

WorldEspTab:AddDropdown('EspFont2',{Values={"0","1","2","3"},Default=3,Multi=false,Text='font:'}):OnChanged(function(Value)
Text1Font = Value
end)

--// MISC \\--
local RightGroupBox = Tabs.Misc:AddRightGroupbox('FREE CAM')
RightGroupBox:AddLabel('B = FREE CAM')
loadstring(game:HttpGet("https://pastebin.com/raw/9x5YxWXV", true))();

local CustomSkyTabBox = Tabs.Misc:AddLeftTabbox('lighting')
local CustomSkyTab = CustomSkyTabBox:AddTab('lighting')

--* Lighting *--

local LightingEnabled = nil

CustomSkyTab:AddToggle('AWASZnfh', {Text = "enabled",Default = false,Tooltip = "Enables SkyTab",}):OnChanged(function(EnabledLighting)
LightingEnabled = EnabledLighting
end)

CustomSkyTab:AddToggle('z1AWASZnfh', {Text = "remove shadows",Default = false,Tooltip = "Global Shadows On/Off",}):OnChanged(function(GlobalShadowsToggle)
if LightingEnabled and GlobalShadowsToggle == true then
sethiddenproperty(game:GetService("Lighting"), "GlobalShadows", false)
elseif LightingEnabled and GlobalShadowsToggle == false then
sethiddenproperty(game:GetService("Lighting"), "GlobalShadows", true)
end
end)

CustomSkyTab:AddToggle('51z1AWASZnfh', {Text = "remove fog",Default = false,Tooltip = "Fog On/Off",}):OnChanged(function(RemoveFogToggle)
if LightingEnabled and RemoveFogToggle == true then
sethiddenproperty(game:GetService("Lighting"), "FogStart", math.huge)
elseif LightingEnabled and RemoveFogToggle == false then
sethiddenproperty(game:GetService("Lighting"), "FogStart", 150)
end
end)

CustomSkyTab:AddToggle('5za1z1AWASZnfh', {Text = "remove clouds",Default = false,Tooltip = "Clouds On/Off",}):OnChanged(function(RemoveCloudsToggle)
if LightingEnabled and RemoveCloudsToggle == true then
sethiddenproperty(game:GetService("Workspace").Terrain.Clouds, "Enabled", false)
elseif LightingEnabled and RemoveCloudsToggle == false then
sethiddenproperty(game:GetService("Workspace").Terrain.Clouds, "Enabled", true)
end
end)


local GCEN = Color3.fromRGB(95, 100, 49)
local GRCEND = false

CustomSkyTab:AddToggle('CLRG', {Text = 'grass color', Default = true, Tooltip = "Off/On"}):AddColorPicker('ColorGrass', {Default = GCEN, Title = 'Changer Color Grass'})
Toggles.CLRG:OnChanged(function(T)
GRCEND = T
game:GetService("Workspace").Terrain:SetMaterialColor(Enum.Material.Grass, T and GCEN or Color3.fromRGB(95, 100, 49))
end)
Options.ColorGrass:OnChanged(function(Grass1)
if GRCEND then
GCEN = Grass1
game:GetService("Workspace").Terrain:SetMaterialColor(Enum.Material.Grass, Grass1)
end
end)

local CloudsColor = Color3.fromRGB(255, 255, 255)
local EnableCustomColor = false

CustomSkyTab:AddToggle('CLRG1', {Text = 'clouds color', Default = EnableCustomColor, Tooltip = "Off/On"}):AddColorPicker('ColorGrass1', {Default = CloudsColor, Title = 'Change Clouds Color'})
Toggles.CLRG1:OnChanged(function(T)
EnableCustomColor = T
game:GetService("Workspace").Terrain.Clouds.Color = T and CloudsColor or Color3.fromRGB(255, 191, 0)
end)
Options.ColorGrass1:OnChanged(function(NewColor)
if LightingEnabled and EnableCustomColor then
CloudsColor = NewColor
game:GetService("Workspace").Terrain.Clouds.Color = NewColor
end
end)

local Lighting = game:GetService("Lighting")
local ColorCorrection = Lighting:FindFirstChild("ColorCorrection")
if not ColorCorrection then
ColorCorrection = Instance.new("ColorCorrectionEffect")
ColorCorrection.Name = "ColorCorrection"
ColorCorrection.Parent = Lighting
end

CustomSkyTab:AddToggle('CLRG1', {Text = 'ambient', Default = EnableCustomColor, Tooltip = "Off/On"}):AddColorPicker('ColorAmbient1', {Default = Color3.fromRGB(255, 255, 255), Title = 'Change Ambient Color'})
Options.ColorAmbient1:OnChanged(function(NewColor2)
sethiddenproperty(ColorCorrection, "TintColor", NewColor2)
end)

CustomSkyTab:AddSlider('Exposure_sUS', {Text = 'exposure', Suffix = "%", Default = 0, Min = -5, Max = 5, Rounding = 1, Compact = true}):OnChanged(function(ExposureValue)
if LightingEnabled and sethiddenproperty(game:GetService("Lighting"), "ExposureCompensation", ExposureValue) then
end
end)

CustomSkyTab:AddSlider('Saturation_sUS', {Text = 'saturation',Suffix = "%",Default = 0,Min = -5,Max = 5,Rounding = 1,Compact = true}):OnChanged(function(SaturationValue)
if sethiddenproperty(ColorCorrection, "Saturation", SaturationValue) then
end
end)

CustomSkyTab:AddDropdown('World_Technology', {Values = { 'Technology', 'ShadowMap', 'Voxel', 'Compatibility' },Default = 1,Multi = false,Text = 'technology:',Tooltip = 'Game Technology',}):OnChanged(function(GPHZ)
if LightingEnabled and GPHZ == "Technology" then
sethiddenproperty(game.Lighting, "Technology", Enum.Technology.Future)
elseif LightingEnabled and GPHZ == "ShadowMap" then
sethiddenproperty(game.Lighting, "Technology", Enum.Technology.ShadowMap)
elseif LightingEnabled and GPHZ == "Voxel" then
sethiddenproperty(game.Lighting, "Technology", Enum.Technology.Voxel)
elseif LightingEnabled and GPHZ == "Compatibility" then
sethiddenproperty(game.Lighting, "Technology", Enum.Technology.Compatibility)
end
end)

local Sky = Instance.new("Sky",game:GetService("Lighting"))
CustomSkyTab:AddDropdown('World_Skybox', {Values = { 'Default', 'Neptune', 'Among Us', 'Nebula', 'Vaporwave', 'Clouds', 'Twilight', 'DaBaby', 'Minecraft', 'Chill', 'Redshift', 'Blue Stars', 'Blue Aurora' },Default = 1,Multi = false,Text = 'custom skybox:',Tooltip = 'Sky Changer',}):OnChanged(function(World_Skybox)
if LightingEnabled and lighting:FindFirstChild("Sky") then
lighting.Sky.SkyboxBk = skybox_assets[World_Skybox].SkyboxBk
lighting.Sky.SkyboxDn = skybox_assets[World_Skybox].SkyboxDn
lighting.Sky.SkyboxFt = skybox_assets[World_Skybox].SkyboxFt
lighting.Sky.SkyboxLf = skybox_assets[World_Skybox].SkyboxLf
lighting.Sky.SkyboxRt = skybox_assets[World_Skybox].SkyboxRt
lighting.Sky.SkyboxUp = skybox_assets[World_Skybox].SkyboxUp
end
end)

-- BYPASS 2
local antihitbox
antihitbox = hookmetamethod(game, "__index", newcclosure(function(...)
local self, k = ...
if not checkcaller() and k == "Size" and self.Name == "Head" then
  return Vector3.new(1.67225, 0.835624, 0.835624)
end
return antihitbox(...)
end))
warn("[Patrick.Pub Bypass Loaded] Full-Hitbox Bypass Loaded Success")



local HeadHitboxTabBox = Tabs.Combat:AddLeftTabbox('head hitbox')
    local HeadHitboxTab = HeadHitboxTabBox:AddTab('head hitbox')
    
    local antihitbox
    antihitbox = hookmetamethod(game, "__index", newcclosure(function(...)
    local self, k = ...
    if not checkcaller() and k == "Size" and self.Name == "Head" then
      return Vector3.new(1.672248125076294, 0.835624098777771, 0.835624098777771)
    end
    return antihitbox(...)
    end))
    
    --* Head Hitbox Expander *--
    
    local HedsOn = Instance.new("Part")
    HedsOn.Name = "HedsOn"
    HedsOn.Anchored = false
    HedsOn.CanCollide = false
    HedsOn.Transparency = 0
    HedsOn.Size = Vector3.new(10, 10, 10)
    HedsOn.Parent = game.ReplicatedStorage
    
    local HeadExtends = false
    local XSize = 10
    local YSize = 10
    local ZSize = 10
    local HitboxTransparency = 10
    
    HeadHitboxTab:AddToggle('HBO',{Text='enabled',Default=false}):OnChanged(function(Value)
    HeadExtends = Value
    end)
    
    HeadHitboxTab:AddSlider('HitboxXSize_Slider', {Text = 'hitbox width:', Default = 5, Min = 0, Max = 10, Rounding = 2, Suffix = "%", Compact = false}):OnChanged(function(HitboxXSize)
    XSize = HitboxXSize
    end)
    
    HeadHitboxTab:AddSlider('HitboxYSize_Slider', {Text = 'hitbox height:', Default = 5, Min = 0, Max = 10, Rounding = 2, Suffix = "%", Compact = false}):OnChanged(function(HitboxYSize)
    YSize = HitboxYSize
    end)
    
    HeadHitboxTab:AddSlider('HitboxXSize_Slider', {Text = 'transparency:', Default = 10, Min = 0, Max = 60, Rounding = 0, Suffix = "%", Compact = false}):OnChanged(function(TransparencyValue)
    HitboxTransparency = TransparencyValue / 100
    end)
    
    task.spawn(function()
    while task.wait() do
      if HeadExtends then
        for _, i in ipairs(game:GetService("Workspace"):GetChildren()) do
          if i:FindFirstChild("HumanoidRootPart") and not i:FindFirstChild("HedsOn") then
            local BigHeadsPart = Instance.new("Part")
            BigHeadsPart.Name = "Head"
            BigHeadsPart.Anchored = false
            BigHeadsPart.CanCollide = false
            BigHeadsPart.Transparency = HitboxTransparency
            BigHeadsPart.Size = Vector3.new(XSize, YSize, ZSize)
            local DeletePart = Instance.new("Weld")
            DeletePart.Parent = BigHeadsPart
            DeletePart.Name = "FAKEHEAD"
            local HeadsParts = BigHeadsPart:Clone()
            HeadsParts.Parent = i
            HeadsParts.Orientation = i.HumanoidRootPart.Orientation
            local clonedHedsOn = HedsOn:Clone()
            clonedHedsOn.Parent = i
            local Headswelding = Instance.new("Weld")
            Headswelding.Parent = HeadsParts
            Headswelding.Part0 = i.HumanoidRootPart
            Headswelding.Part1 = HeadsParts
            HeadsParts.Position = Vector3.new(i.HumanoidRootPart.Position.X, i.HumanoidRootPart.Position.Y - 0.6, i.HumanoidRootPart.Position.Z)
          end
        end
      else
        for _, i in ipairs(game:GetService("Workspace"):GetChildren()) do
          if i:FindFirstChild("HumanoidRootPart") and i:FindFirstChild("HedsOn") then
            i.HedsOn:Remove()
            for _, a in ipairs(i:GetChildren()) do
              if a.Name == "Head" and a:FindFirstChild("FAKEHEAD") and (not a:FindFirstChild("Nametag") or not a:FindFirstChild("Face")) then
                a:Remove()
              end
            end
          end
        end
      end
    end
    end)
    





















--// LOCAL \\--
local RightGroupBox = Tabs.Credits:AddRightGroupbox('Made By')
RightGroupBox:AddLabel('ðŸŒŸPatrick.PubðŸŒŸ')


local RightGroupBox = Tabs.Credits:AddLeftGroupbox('Credit')
RightGroupBox:AddLabel('ðŸŒŸPatrick.PubðŸŒŸ')

local RightGroupBox = Tabs.Credits:AddLeftGroupbox('Best Scripter')
RightGroupBox:AddLabel('ðŸŒŸPatrick.PubðŸŒŸ')

local RightGroupBox = Tabs.Credits:AddRightGroupbox('Themes Made By')
RightGroupBox:AddLabel('ðŸŒŸPatrick.PubðŸŒŸ')





--// CREDITS \\--




Library:SetWatermarkVisibility(true)

local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1;

    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter;
        FrameTimer = tick();
        FrameCounter = 0;
    end;

    Library:SetWatermark(("ðŸŒŸPatrick.PubðŸŒŸ | Build: Free | Game: Trident Survival"):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ));
end);

Library.KeybindFrame.Visible = true;

Library:OnUnload(function()
    WatermarkConnection:Disconnect()

    print('Unloaded!')
    Library.Unloaded = true
end)

local MenuGroup = Tabs['UI Settings']:AddRightGroupbox('Menu')

MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddButton("Rejoin Server", function()
    Library:Notify("Rejoining", 30)
    wait(1)
    local ts = game:GetService("TeleportService")
    local p = game:GetService("Players").LocalPlayer
    ts:Teleport(game.PlaceId, p)
end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'K', NoUI = true, Text = 'Menu keybind' })
MenuGroup:AddDivider()
local playerCountLabel = MenuGroup:AddLabel("Player Count: 0", nil, true)
local function updatePlayerCount()
local playerCount = #game:GetService("Players"):GetPlayers()
playerCountLabel:SetText("Players Online : " .. playerCount)
end
game:GetService("Players").PlayerAdded:Connect(updatePlayerCount)
game:GetService("Players").PlayerRemoving:Connect(updatePlayerCount)
updatePlayerCount()
MenuGroup:AddDivider()
MenuGroup:AddLabel('Credits', true)
MenuGroup:AddLabel('Made by ðŸŒŸPatrick.PubðŸŒŸ', true)
Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings()

SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

ThemeManager:SetFolder('ðŸŒŸPatrick.PubðŸŒŸ')
SaveManager:SetFolder('ðŸŒŸPatrick.PubðŸŒŸ/TRIDENT SURVIVAL')

SaveManager:BuildConfigSection(Tabs['UI Settings'])

ThemeManager:ApplyToTab(Tabs['UI Settings'])

SaveManager:LoadAutoloadConfig()
wait(0)Library:Notify("Thanks for using ðŸŒŸPatrick.PubðŸŒŸ")
wait(0)Library:Notify("Status : ðŸŸ¢Undetected")